=============================
2022年のオープンCAE活動報告．
=============================

自己紹介．
==========

.. まずは自己紹介をさせていただきます．
   今回は実験的に
   入力された日本語テキストに基づいて
   自由な音声を生成するHMMテキスト音声合成システム，
   Open JTalkで発表の音声を作成いたしました．
   ご了承ください．
   発表者の名前は小山哲央といいます．
   都内のCAE関係の企業でシステムエンジニアとして
   働いています．
   業務内容は構造解析のプログラム開発と受託解析がメインです．
   プライベートのOSS活動では有限要素法FEMライブラリ
   GetFEM と
   可視化ライブラリ PyVista の開発と検証をしています．
   またドキュメントの翻訳に興味がありライブラリの
   Sphinxドキュメントの翻訳をしています．
   今回はOSS活動の中でもオープンCAE関連のものに
   焦点を当て紹介をさせていただきます．

概要．
======

.. この発表では2022年に活動した
   各プロジェクトについて説明します．
   2022年のオープンCAE関連の活動プロジェクトの概要は
   梗概の表をご覧ください．

PyVistaチュートリアル．
=======================

背景．
------

.. チュートリアルの背景について説明します．
   SciPy2022 Conferenceで3次元可視化ライブラリPyVistaのチュートリアルを行いました．
   4時間の講義と演習を通じて,
   Pythonにおける3次元可視化のハイライトを紹介する
   ことを目的としています．

PyVistaについて．
-----------------

.. PyVistaは汎用の3D可視化ライブラリで,
   500以上のオープンソースプロジェクトや多くのクローズドソースプロジェクトで,
   CAEや地球物理学から火山やデジタルアートワークまであらゆるものの可視化に
   利用されています．
   PyVistaは,
   Visualization Toolkit (VTK) にPythonicなAPIを公開し,
   VTKの予備知識がなくてもすぐに使えるツールを
   提供します．
   PyVistaの既存のJupyterノートブックのサンプルの多くを通じて,
   インターネットアクセスとコンピュータがあれば
   誰でもアクセスできる実践的なチュートリアルと,
   人気のある3D可視化の使用例に焦点を当てた
   包括的な概要を通じて新しい教材を提供します．

チュートリアルの説明．
----------------------

.. チュートリアルの内容について
   説明をします．
   PyVistaを使って,
   一般的な形式のさまざまなデータセットから3Dビジュアライゼーションを作成します．
   また,
   PyVistaのクラスとデータ構造の概要を
   実例を交えて解説します．
   それにより,
   PyVistaの様々なフィルタや機能を使いこなすことができます．
   PyVistaで使用されている,
   または使用できるmeshioやtrimeshなどの
   Pythonライブラリ
   についても学ぶことができます．
   このチュートリアルは,
   Pythonの基本的なユーザーから上級のパワーユーザーまで,
   あらゆる分野のデータを可視化したいと考える
   すべての人を対象にしています．
   Pythonの基本的な知識を持っていること．
   Jupyter Labをあなたのマシンにインストールし,
   実行ができることを前提としています．
   中級者は NumPy や,
   trimesh や meshio など,
   PyVista と互換性のあるライブラリに慣れておくとよいでしょう．
   上級者はVisualization Toolkit (VTK),
   一般的なデータサイエンス,
   QtのようなGUIフレームワークに
   精通している必要があります．

チュートリアルスケジュール(前半)．
-----------------------------------

.. チュートリアルスケジュールについて説明します．
   はじめにではPyVistaを使ってPythonで3Dビジュアライゼーションを行います．
   所要時間は20分です．
   基本的な使い方ではpyvista.examples モジュールと外部ファイルを使って,
   3Dデータを読み込んでプロットします．
   所要時間は20分です．
   メッシュとは ではPyVistaのデータ型の基本を学び,
   一般的な3Dファイル形式を開いてデータを
   3Dで可視化する方法を紹介します．
   プロットオプションとアニメーション ではPyVistaプロッティングAPIの多くの機能を実演し,
   魅力的な3Dビジュアリゼーションとタッチオンアニメーションを作成します．
   所要時間は20分です．
   フィルタ ではメッシュの解析と変更を行うための
   PyVistaフィルタAPIのデモを行います．
   所要時間は15分です．
   PyVistaの活用 ではPyVistaがすでにいくつかのプロジェクトで
   使用されており,
   あらゆる可視化に使用できることを紹介します．
   所要時間は15分です．
   PyVistaとVTK ではPyVistaがVTKをどのように
   使っているか,
   そして両者の長所をどのように組み合わせられるかを
   紹介します!
   所要時間は20分です．

チュートリアルスケジュール(後半)．
-----------------------------------

.. PyVistaとSphinx ではPyVistaを活用して,
   素晴らしいインタラクティブなWebドキュメントを作成することができます．
   所要時間は20分です．
   PyVistaのウィジェットでは様々な便利なウィジェットを使って,
   PyVistaを使います．
   所要時間は20分です．
   PyVistaとQTではPyVista を使用して,
   pyinstallerとQtフレームワークを使用したスタンドアロンアプリケーションを
   作成する方法を説明します．
   所要時間は15分です．
   以上がチュートリアルの紹介です．
   日本語でのチュートリアルの開催にご興味のある場合は
   小山にご相談ください．

ParaViewドキュメント翻訳．
==========================

概要．
------

.. 次に紹介するのは,
   Read The Docsというサイトで,
   ParaViewの公式ドキュメントを日本語で提供するプロジェクトです．
   ParaViewは,
   2次元および3次元のデータセットを可視化するための
   オープンソースのアプリケーションです．
   ParaViewが扱うことのできるデータセットのサイズは,
   アプリケーションを実行するアーキテクチャによって大きく異なります．
   ParaViewがサポートするプラットフォームは,
   シングルプロセッサのワークステーションから
   マルチプロセッサの分散メモリ型スーパーコンピュータや
   ワークステーション・クラスタまで多岐にわたります．
   並列マシンを使用することで,
   ParaViewは非常に大きなデータセットを並行して処理し,
   後でその結果を収集することができます．
   現在までに,
   ParaViewは数十億の非構造セルを処理し,
   1兆以上の構造セルを処理することが
   実証されています．
   ParaViewの並列フレームワークは10万以上の処理コアで実行されています．

翻訳．
------

.. ドキュメントの翻訳には
   ParaViewの公式ドキュメントで使用されている
   Sphinxの国際化機能を使用しています．

ParaViewドキュメントの概要．
----------------------------

.. ParaViewドキュメントの概要について説明します．
   翻訳したドキュメントは3巻に分かれています．
   ユーザーズガイドの1章から8章では,
   ParaViewによるデータ解析と可視化のさまざまな側面を
   カバーしています．
   リファレンスマニュアルの1章から12章では,
   UIとスクリプトAPIのさまざまなコンポーネントについて
   詳しく説明しています．
   チュートリアルは自習チュートリアルとクラスルームチュートリアルに分かれています．
   自習チュートリアルの1章から5章では,
   ParaViewソフトウェアとその歴史を紹介し,
   基本的な使用法,
   バッチPythonスクリプト,
   および大規模モデルの視覚化をカバーするParaViewの
   使用方法に関する演習を提供します．
   クラスルームチュートリアルの1章から18章では,
   ParaViewの使用方法に関する初級,
   応用,
   Python,
   バッチ,
   およびターゲットを絞ったチュートリアルレッスンを提供し,
   Sandia国立研究所内で3時間のクラスとして提供されています．

FEABeR．
========

.. 次にベンチマークプロジェクトについてほうこくします．
   FEABeRはオープンソースのFEAコードを使用した
   ベンチマーク結果を公開するプロジェクトです．
   FEABeRは"Finite Element Analysis Benchmark Report"の略称です．
   このプロジェクトではオープンソ－スFEAコードの
   検証結果を入力データともに公開し,
   オープンソースコードの品質を担保することを
   目的としています．
   FEABeRはこの目的を達成するために
   次の成果を公開します．
   検証問題の概要
   実行結果と参照値の比較
   各検証対象コードの入力ファイル
   このプロジェクトは誰でも参加できます．
   検証問題の提案は issue から行ってください．
   質問や相談は Discussions から行ってください．
   検証結果やインプットの掲載は Pull Request から行ってください．
   FEABeRのコンテンツはクリエイティブ・コモンズ 表示 4.0 国際 ライセンスのもとに公開されています．

コミュニティについて．
----------------------

.. conpassというサイトで
   毎月FEABeRプロジェクトのもくもく会をやっています．
   構造解析ソフトのベンチマークに興味のある場合は
   お気軽にご参加ください．
   新しいオープンCAE構造解析ソフトの参加も歓迎しています．

検証対象ソフトウェア．
----------------------

.. 本プロジェクトで使用するソフトウェアの一覧を示します．
   各ソフトウェアについて紹介いたします．

CalculiX．
--------------

.. CalculiXは有限要素法を使用した
   オープンソースの解析コードです．
   有限要素モデルの構築,
   計算,
   ポスト処理ができます．
   GUIであるcgxとソルバであるccxが
   提供されています．

Code-Aster．
------------------

.. Code-AsterはフランスのeDFが開発,
   公開しているオープンソースのマルチフィジックス解析ソルバ―です．
   線形構造解析だけでなく,
   非線形構造,
   熱,
   音響など様々な分野の計算が可能です．
   プリポストを統合したSalome-Mecaも公開されており,
   商用CAEソフトウェアと同様の操作で計算できます．

FrontISTR．
-----------------

.. FrontISTRはオープンソースの大規模並列計算に対応する構造解析ソルバです．
   WindowsやLinuxのPCクラスタおよび超並列のスパコンにも
   対応可能です．
   FrontISTRはこちらのサイトで公開されています．

GetFEM．
--------------

.. GetFEMは,
   共同開発を元にしたオープンソースのライブラリです．
   線形および非線形偏微分方程式の連成システムを
   有限要素法で解くための最も柔軟な
   フレームワークを提供することを目指しています．
   GetFEMにはいくつかのスクリプト言語(Python,
   Octave,
   Scilab,
   Matlab)インターフェイスがあり,
   ほとんどすべての機能をスクリプトを書くだけで
   使うことができます．

書籍出版．
==========

.. 最後に書籍の出版について報告します．
   『Pythonによる有限要素法実装ノート』というタイトルで書籍を出版しました．
   本書は数値解析手法のひとつである有限要素法を
   Pythonによって実装するための方法の解説書です．
   具体的にはPythonを使って,
   有限要素法のメッシュ作成やソルバ実行や結果の可視化が,
   ライブラリを使ってできることを目指します．
   ただし,
   Pythonの基礎知識や有限要素法の理論の基礎は本書では
   扱いません．
   本書は
   Pythonでデータ分析をしていて,
   Pythonによる有限要素法の実装について
   興味がある人．
   フルスクラッチではなく,
   あくまでライブラリを使いこなしたい人．
   有限要素法の入門書を読んだ人．
   NumPyやMatplotlibのように,
   Pythonicに有限要素法解析と可視化をしたい人
   を対象としています．
   ただし,
   まったくの初心者は対象外です．
   本書を読むためには,
   LinuxとPythonについての基礎知識と
   有限要素法の基礎知識が必要となります．

まとめ．
--------

.. 以上,
   今年活動した4件のオープンソースプロジェクトについて
   報告しました．
